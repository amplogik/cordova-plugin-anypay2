<?xml version='1.0' encoding='utf-8'?>
<plugin id="cordova-plugin-anypay" version="0.1.1" xmlns="http://apache.org/cordova/ns/plugins/1.0" xmlns:android="http://schemas.android.com/apk/res/android">

    <name>AnyPayCordova</name>

    <js-module name="AnyPayCordova" src="www/AnyPayCordova.js">
        <clobbers target="cordova.plugins.AnyPayCordova" />
    </js-module>

    <platform name="ios">
        <config-file parent="/*" target="config.xml">
            <feature name="AnyPayCordova">
                <param name="ios-package" value="AnyPayCordova" />
            </feature>
        </config-file>
        <source-file src="src/ios/AnyPayCordova.m" />
        <!--
        /* due to the way in which the cordova build system assebles libararies this doesn't quite
        work.   You need to use the embed directive on the framework element, but you ALSO
        require a source-file element to indicate that the framework nees to be move to lib, not libs
        this may have worked with Xcode 9 or 10, but does not work with 11 - KIM 2019-11-20
        -->
        <framework custom="true" embed="true" src="libs/iOS/AnyPay.framework" target-dir="libs" />
        <!--
        <source-file src="src/ios/AnyPay.framework" target-dir="lib" framework="true" />
        <framework src="libs/iOS/AnyPay.framework" embed="true" custom="true" />
        -->
         
        <!--<resource-file src="libs/ios/AnyPay.framework" target="libs/AnyPay.framework" />-->

    </platform>

    <platform name="android">
        <config-file parent="/*" target="res/xml/config.xml">
            <feature name="AnyPayCordova">
                <param name="android-package" value="com.anywherecommerce.anypaycordova.AnyPayCordova" />
            </feature>
        </config-file>
        <config-file parent="/*" target="AndroidManifest.xml" />
        <source-file src="src/android/AnyPayCordova.java" target-dir="src/com/anywherecommerce/anypaycordova" />

        <source-file src="src/android/DecryptedData.java" target-dir="src/com/bbpos" />
        <source-file src="src/android/DES.java" target-dir="src/com/bbpos" />
        <source-file src="src/android/DUKPTServer.java" target-dir="src/com/bbpos" />
        <source-file src="src/android/EmvSwipeDecrypt.java" target-dir="src/com/bbpos" />
        <source-file src="src/android/TripleDES.java" target-dir="src/com/bbpos" />

      
        <framework custom="true" src="src/android/anypay.gradle" type="gradleReference" />
      
<!--
/*
<resource-file src="libs/android/com.anywherecommerce.android.sdk-release.aar" target="libs/anypay.aar" />

When gradle runs the compilation using the line from the plugin.xml above,
it searches for the libs in app/libs which is not present in the project 
(it does in the standard Android Studio project, but in Cordova Android 
project structure the libs folder is different). 

However the plugin copies the aar library to app/src/main/libs which 
can trick us into thinking that it copies the aar file to app/libs, or 
'libs' as per the incorrect dirs entry below this comment.  It does not.

The correct path to find the aar file is src/main/libs  

I have fixed the dirs entry in src/android/anypay.gradle

Also, note that the obsolete 'compile' directive has been replaced by the
correct 'implementation' directive in the dependencies in src/android/anypay.gradle

- KIM 2019-11-20

*/
-->
        <resource-file src="libs/android/com.anywherecommerce.android.sdk-release.aar" target="libs/anypay.aar" />

    </platform>
</plugin>
